	.Z80
;
;************************************************
;*						*
;*	Queue Control Block Definitions		*
;*						*
;************************************************
;
;	On entry to the queue management routines,
;	the IX points to a queue control block.
;	This block contains the following info:
;
; Name			Offset		Description
;
QSIZE		EQU	0		;bit field of status (see below)
QMAX		EQU	QSIZE+1		;max size
QPORT		EQU	QMAX+1		;physical port address
OUTVECT		EQU	QPORT+1		;address of output routine
QSTART		EQU	OUTVECT+2	;address of start of queue ram
QEND		EQU	QSTART+2	;address of queue ram end + 1
QFRONT		EQU	QEND+2		;address of current front of queue
QREAR		EQU	QFRONT+2	;address of current rear of queue
;
;	The status byte contains the following bits:
;
; Name			Bit		Descrition
;
QEMPTY		EQU	0		;reset when QFRONT=QREAR and empty
QFULL		EQU	1		;set when QFRONT=QREAR and full
;

; 	TEST THE STATUS OF THE CONSOLE INPUT TO
; 	SEE IF A CHARACTER IS AVAILABLE.
;	EXIT:	A=0FFH	->	CHARACTER AVAILABLE
;		A=0	->	NO CHARACTER

CONST:	CALL	IODISP		; DIRECT I/O TO PROPER DEVICE
	DEFB	0		; CONSOLE POSITION IN IOBYTE
	DEFW	TTYIST		; CONSOLE PRINTER DEVICE
	DEFW	CRTST		; CONSOLE CRT DEVICE
	DEFW	READST		; CONSOLE READER DEVICE
	DEFW	MODIST		; CONSOLE MODEM PORT DEVICE 

;	PRINTER PORT INPUT STATUS ROUTINE

TTYIST:
	LD	IX,TTY
	JR	CHKIST

;	MODEM PORT INPUT STATUS ROUTINE

MODIST:
	LD	IX,MODEM
	JR	CHKIST

; 	CONSOLE STATUS ROUTINE FOR STANDARD
; 	CRT TERMINAL DEVICE, SIO #0 CHANNEL B

CRTST:
	LD	IX,CRT

CHKIST:	
	LD	A,(IX+QSIZE)
	OR	A
	RET	Z		; NO. A = 0

	LD	A,0FFH		; YES. A = FFH
	RET

; 	GRAB A CHARACTER FROM CONSOLE INPUT
;	     EXIT:	A=RETURNED CHARACTER

CONIN:	CALL	IODISP		; DIRECT I/O TO PROPER DEVICE
	DEFB	0		; CONSOLE POSITION IN IOBYTE
	DEFW	TTYIN		; CONSOLE PRINTER DEVICE
	DEFW	CRTIN		; CONSOLE CRT DEVICE
	DEFW	READER		; CONSOLE CURRENT READER 
	DEFW	MODIN		; CONSOLE MODEM DEVICE 

; 	INPUT FROM PRINTER PORT 

TTYIN:
	LD	IX,TTY
	JR	GETINP

;	INPUT FROM MODEM PORT

MODIN:
	LD	IX,MODEM
	JR	GETINP

; 	CONSOLE INPUT ROUTINE FOR
; 	STANDARD CRT TERMINAL DEVICE.
; 	SIO CHANNEL B.

CRTIN:
		LD	IX,CRT
GETINP:
		LD	A,(IX+QSIZE)
		OR	A
		JR	Z,GETINP
GETQUE:
		DI
		LD	L,(IX+QREAR)		;get rear pointer
		LD	H,(IX+QREAR+1)
		LD	E,(HL)			;get the char
		CALL	INCQPTR			;increment the pointer
		LD	(IX+QREAR),L		;and store it
		LD	(IX+QREAR+1),H
		LD	A,(IX+QSIZE)
		DEC	A
		LD	(IX+QSIZE),A
		JR	NZ,NOTEMPTY
		LD	HL,NOTEMPTY
		PUSH	HL
		LD	L,(IX+OUTVECT)
		LD	H,(IX+OUTVECT+1)
		LD	C,'Q'-64
		JP	(HL)
NOTEMPTY:
		LD	A,E
		EI
		RET
;

CRTINT:
		PUSH	IX
		LD	IX,CRT
		JR	DOINT
;
MODINT:
		PUSH	IX
		LD	IX,MODEM
		JR	DOINT
;
TTYINT:
		PUSH	IX
		LD	IX,TTY
DOINT:
		PUSH	AF
		PUSH	BC
		PUSH	HL
		LD	C,(IX+QPORT)
		IN	B,(C)
		CALL	PUTQUE
		POP	HL
		POP	BC
		POP	AF
		POP	IX
		EI
		RETI
;
PUTQUE:
		LD	A,(IX+QSIZE)
		CP	(IX+QMAX)
		RET	Z
		INC	A
		LD	(IX+QSIZE),A
		LD	L,(IX+QFRONT)		;get front pointer
		LD	H,(IX+QFRONT+1)
		LD	(HL),B			;put the char
		CALL	INCQPTR			;increment the pointer
		LD	(IX+QFRONT),L		;and store it
		LD	(IX+QFRONT+1),H
		LD	A,(IX+QMAX)
		SUB	(IX+QSIZE)
		CP	8
		RET	NC
		LD	L,(IX+OUTVECT)
		LD	H,(IX+OUTVECT+1)
		LD	C,'S'-64
		JP	(HL)
;
; 	OUTPUT A CHARACTER TO THE CONSOLE
;	ENTRY:	C=CHARACTER TO BE OUTPUT

CONOUT:	CALL	IODISP		; DIRECT I/O TO PROPER DEVICE
	DEFB	0		; CONSOLE POSITION IN IOBYTE
	DEFW	TTYOUT		; CONSOLE PRINTER DEVICE
	DEFW	CRTOUT		; CONSOLE CRT DEVICE
	DEFW	PUNCH		; CONSOLE CURRENT PUNCH DEVICE
	DEFW	MODOUT		; CONSOLE MODEM DEVICE 

;	PRINTER STATUS ROUTINE FOR SERIAL
;	INTERFACE WITH EPSON AND TI SIO
;	#1 CHANNEL B

TTYOST:	LD	A,00010000B	; RESET EXTRN/STATUS COMMAND
	OUT	(SIOBC1),A	; SEN OUT
	IN	A,(SIOBC1)	; READ SIO STATUS
	JR	CHKOST

;	CRT OUTPUT STATUS ROUTINE

CRTOST:	LD	A,00010000B	; RESET EXTRN/STATUS COMMAND
	OUT	(SIOBC0),A
	IN	A,(SIOBC0)
	LD	B,A
	LD	A,(CRTMSK)
	AND	B
	CP	4
	JR	NZ,NOTRDY
CHKOS1:	XOR	A
	DEC	A		; A = FF
	RET

;	MODEM OUTPUT STATUS ROUTINE FOR SERIAL OUTPUT

MODOST:	LD	A,00010000B	; RESET EXTRN/STATUS COMMAND
	OUT	(SIOAC1),A	; SEND IT OUT
	IN	A,(SIOAC1)	; READ SIO STATUS

CHKOST:	AND	00100100B	; CHECK TRANSMITT READY AND CTS
	CP	00100100B	; READY TO SEND
	JR	Z,CHKOS1	; YES, CODE FOR SET READY CONDITION
NOTRDY:	XOR	A		; NO, SET NOT READY CONDITION
	RET

; 	OUTPUT ROUTINE FOR SERIAL EPSON AND TI 
; 	PRINTER SIO CHANNEL A

TTYOUT:	CALL	TTYOST		; CHECK STATUS OF PRINTER
	JR	Z,TTYOUT	; NOT READY, LOOP BACK
	LD	A,C		; GET CHARACTER IN REG. C
	AND	7FH		; STRIP OFF PARITY
	OUT	(SIOBD1),A	; SEND OUT
	RET

;	OUTPUT ROUTINE FOR MODEM PORT

MODOUT:	CALL	MODOST		; CHECK STATUS OF PRINTER
	JR	Z,MODOUT	; NOT READY WAIT
	LD	A,C
	OUT	(SIOAD1),A	; OUTPUT CHAR
	RET

; 	OUTPUT ROUTINE FOR STANDARD CRT
; 	TERMINAL DEVICE, SIO CHANNEL B

CRTOUT:	CALL	CRTOST		; CHECK CHANNEL B TXMIT STATUS 
	JR	Z,CRTOUT	; NOT YET.
	LD	A,C		; TRANSFER THE CHARACTER
	OUT	(SIOBD0),A	; OUTPUT THE CHARACTER TO SIO
	RET

;	READER STATUS ROUTINE

READST:	CALL	IODISP		; DIRECT I/O TO PROPER DEVICE
	DEFB	2
	DEFW	TTYIST		; STANDARD PRINTER DEVICE
	DEFW	CRTST		; STANDARD CONSOLE DEVICE
	DEFW	MODIST		; MODEM PORT DEVICE
	DEFW	UR2STA		; USER DEFINED READER #2

; 	PAPER TAPE READER ROUTINE,
; 	MOSTLY UNUSED.

READER:	CALL	IODISP		; DIRECT I/O TO PROPER DEVICE
	DEFB	2		; POSITION OF READER IN IOBYTE
	DEFW	TTYIN		; STANDARD TELETYPE DEVICE
	DEFW	CRTIN		; STANDARD CONSOLE DEVICE 
	DEFW	MODIN		; MODEM PORT DEVICE 
	DEFW	UR2		; USER DEFINED READER #2
 	

; 	PAPER TAPE PUNCH ROUTINE,
; 	CURRENTLY DUMMIED OUT,
; 	PRETTY MUCH.

PUNCH:	CALL	IODISP		; DIRECT I/O TO PROPER DEVICE
	DEFB	4		; PUNCH POSITION IN IOBYTE
	DEFW	TTYOUT		; TELETYPE OUTPUT
	DEFW	CRTOUT		; CONSOLE OUTPUT 
	DEFW	MODOUT		; MODEM PORT OUTPUT 
	DEFW	UP2PUN		; USER DEFINED PUNCH #2

PUNST:	CALL	IODISP		; DIRECT I/O TO PROPER DEVICE
	DEFB	4		; PUNCH POSITION IN IOBYTE
	DEFW	TTYOST		; TELETYPE OUTPUT
	DEFW	CRTOST		; CONSOLE OUTPUT 
	DEFW	MODOST		; MODEM PORT OUTPUT 
	DEFW	UR2STA		; USER DEFINED PUNCH #2

;	OUTPUT ROUTINE FOR LIST DEVICE 

LIST:	CALL	IODISP		; DIRECT I/O TO PROPER DEVICE
	DEFB	6		; LIST POSITION IN IOBYTE
	DEFW	TTYOUT		; OUTPUT TO TELETYPE DEVICE
	DEFW	CRTOUT		; OUTPUT TO CRT DEVICE
	DEFW	PUNCH		; MODEM PORT OUTPUT 
	DEFW	MODOUT		; USER DEFINED PRINTING DEVICE

;	LINE PRINTER STATUS ROUTINE
;	READ LINE PRINTER STATUS AND RETURN IN A-REG
;	EXIT: 	A=0	->  PRINTER NOT READY
;	        A=FF	->  PRINTER READY

LISTST:
	CALL	IODISP
	DEFB	6
	DEFW	TTYOST
	DEFW	CRTOST
	DEFW	PUNST
	DEFW	MODOST

;	THIS ROUTINE TRANSFER CONTROL TO 
;	THE I/O DRIVER INDICATED BY THE 
;	APPROPRIATE BITS IN IOBYTE AT ADDRESS (0003H)
;	ENTRY (SP) -->  (DEVICE TYPE)
;			(DEVICE 1 ADDRESS)
;			(DEVICE 2 ADDRESS)
;			(DEVICE 3 ADDRESS)
;			(DEVICE 4 ADDRESS)

IODISP:
	POP	HL
	PUSH	DE
	LD	A,(HL)		; GET DEVICE TYPE
	INC	HL		; ADDRESS DEVICE 1 ADDRESS
	LD	D,A		; SAVE IT FOR LATER
	OR	A
	LD	A,(IOBYTE)	; GET CURRENT IOBYTE
	JR	Z,IODI20	; IF NO SHIFTING NEEDED

IODI10:
	RRCA			; ROTATE BYTE UNTIL DEVICE BITS
	DEC	D		; ARE LINED UP WITH BIT #0
	JR	NZ,IODI10

IODI20:
	AND	03H		; MASK OFF DON'T CARE BITS
	RLCA
	LD	E,A
	ADD	HL,DE
	LD	E,(HL)		; GET DISPATCH ADDRESS INTO DE
	INC	HL
	LD	D,(HL)
	EX	DE,HL		; PUT THIS ADDRESS INTO HL
	POP	DE		; RESTORE DE
	JP	(HL)		; AND GO TO I/O ROUTINE

;	DUMMY I/O ROUTINES THAT NOT YET IMPLEMENT IN BIOS

UR2STA:
	LD	A,0FFH		; RETURN WITH NOT BUSY CONDITION
	OR	A
	RET

UR2:
	LD	A,1AH		; RETURN WITH EOF CODE

UP2PUN:
	RET			; DO NOTHING

;
;	Support Routines
;
INCQPTR:
		INC	HL			;point to the next one
		LD	A,(IX+QEND)		;check to see if end
		CP	L
		RET	NZ
		LD	A,(IX+QEND+1)
		CP	H
		RET	NZ
		LD	L,(IX+QSTART)		;if so point to beginning
		LD	H,(IX+QSTART+1)
		RET
;
CRT:		db	0,CRTLEN,SIOBD0
		dw	CRTOUT,crtdat,crtdat+crtlen,crtdat,crtdat
MODEM:		db	0,MODLEN,SIOAD1
		dw	MODOUT,moddat,moddat+modlen,moddat,moddat
TTY:		db	0,TTYLEN,SIOBD1
		dw	TTYOUT,ttydat,ttydat+ttylen,ttydat,ttydat

; END OF 802HCONS.MAC
