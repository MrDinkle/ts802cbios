;	TITLE	'802HCONS FOR TS-802H CBIOS CP/M VER. 2.2 -  6/17/81'
;
;*********************************************************
;*           THIS IS ONLY AREA THAT NEEDS                *
;*           TO BE MODIFIED FOR DIFFERENT                *
;*           MEMORY AND DISK CONFIGURATION               *
;*********************************************************
;
; SYSTEM DEFAULTED I/O BYTE
;
IODEF	EQU	00010101B	;LOGICAL LST:=TTYA:
				;	 PUN:=TTYA:
				;	 RDR:=TTYA:
				;	 CON:=TTYB:
; SIO #1 -- PRINTER
CSTATA	EQU	23H		;STATUS PORT OF CHANNEL 'B'
CDATAA	EQU	21H		;DATA PORT I/O OF CHANNEL 'B'
;
; SIO #0 -- CRT
CSTATB	EQU	0FH		;STATUS PORT OF CHANNEL 'B'
CDATAB	EQU	0DH		;DATA PORT OF CHANNEL 'B'
;
CTC0	EQU	08H		;CTC CHANNEL #0 PORT ADDRESS
CTC1	EQU	09H		;CTC CHANNEL #1 PORT ADDRESS
CTC2	EQU	0AH		;CTC CHANNEL #2 PORT ADDRESS
CTC3	EQU	0BH		;CTC CHANNEL #3 PORT ADDRESS
CTCM0	EQU	01000111B	;CTC #0 CONTROL REG.
CTCM1	EQU	01000111B	;CTC #1 CONTROL REG.
BRSIOA	EQU	4		;COUNT FOR 9600 BPS FOR CH.'A'
BRSIOB	EQU	4		;9600 BSP FOR CHANNEL 'B'
;
CH2RTN	EQU	0FF04H		;CTC CH-2 INTERRUPT SERVICE ADDRESS
PULSE	EQU	0050H		;1/60 OF SECOND LOCATION
SECOND	EQU	0051H		;SECOND
MINUTE	EQU	0052H		;MINUTE
HOUR	EQU	0053H		;HOUR
;
CKBR	EQU	01H
CPTR	EQU	04H
CTS	EQU	20H		;CLEAR TO SEND SIGNAL
DCD	EQU	08H		;DCD SIGNAL

; 	SIO STATUS BIT DEFINITIONS
RCVRDY	EQU	0		;RECEIVE CHARACTER AVAILABLE
TRXRDY	EQU	2		;TRANSMITTER BUFFER EMPTY
;
ASCETX	EQU	03H		;ASCII END OF TRANSMISSION
ASCACK	EQU	06H		;ASCII ACKNOWLEDGEMENT
;
CNULL	EQU	1		;CONSOLE NULL COUNT.

;	PIO PORT ADDRESS
PIOAD	EQU	0D0H		;PORT #A DATA
PIOBD	EQU	0D1H		;PORT #B DATA
PIOAC	EQU	0D2H		;PORT #A CONTROL
PIOBC	EQU	0D3H		;PORT #B CONTROL
STROBE	EQU	0		;PRINTER STROBE BIT#
PIOMSK	EQU	00111000B	;MASK FOR READY, PAPER OUT, FAULT
PIOERR	EQU	00001000B	;ERROR STATE MASK
PRTPEM	EQU	4		;PRINTER PAPER EMPTY BIT#
PRTBSY	EQU	5		;PRINTER BUSY BIT#
PRTSLC	EQU	6		;PRINTER OFF LINE BIT#

CR	EQU	0DH		;ASCII CARRIAGE RETURN
LF	EQU	0AH		;ASCII LINE FEED

;
; TINIT
; THIS SECTION IS EXECUTED WHENEVER RESET AND RUN
; IS PUSHED, AFTER THE COLDSTART LOADER READS IN
; THE CPM SYSTEM.
;
TINIT:
;
;	INITIALIZE CHANNELS 'A' AND 'B' BAUD-RATE
;
;	MVI	A,CTCM0
;	OUT	CTC0		;SET CHANNEL #0 MODE
;	MVI	A,BRSIOA	;SET COUNTER FOR SIO CHANNEL 'A' BAUD RATE
;	OUT	CTC0
;
;	MVI	A,CTCM1
;	OUT	CTC1		;SET CHANNEL #1 MODE
;	MVI	A,BRSIOB	;SET COUNTER FOR SIO CHANNEL 'B' BAUD-RATE
;	OUT	CTC1

; INITIALIZATION FOR CTC CHANNEL #2 INTERRUPT

	.Z80
	IM	2		;CPU INTERRUPT MODE 2
	LD	A,0FFH		;HIGH ORDER INTERRUPT SERVICE ADDRESS
	LD	I,A		;PUT IT IN INTERRUPT REGISTER
	LD	HL,INTRP	;INTERRUPT SERVICE ROUTINE ADDRESS
	LD	(CH2RTN),HL	;SAVE IT IN INTERRUPT ADDRESS TABLE
	LD	HL,PULSE	;COUNTER FOR INTERRUPT
	LD	(HL),0		;RESET PULSE COUNTER
	INC	HL
	LD	(HL),0		;RESET SECOND
	INC	HL
	LD	(HL),0		;RESET MINUTE
	INC	HL
	LD	(HL),0		;RESET HOUR
	INC	HL
	LD	(HL),0		;RESET TIME FLAG
	LD	A,0
	OUT	(CTC0),A	;LOW ORDER INTERRUPT SERVICE ADDRESS
	LD	HL,CTCTAB	;CTC TABLE FOR CHANNEL #2
	CALL	PRTINI
	EI
	.8080

; INITIALIZE SIO CHANNEL 'A' AND 'B'

	LXI	H,SIOTAB
	CALL	PRTINI		;INITIALIZE SIO CH 'A'
	CALL	PRTINI		;INITIALIZE SIO CH 'B'
	IN	CDATAA		;EMPTY CH 'A' RCV.-REG
	IN	CDATAB		;EMPTY CH 'B' RCV.-REG

; INITIALIZE PIO CHANNELS

	LXI	H,PIOTAB
	CALL	PRTINI
	CALL	PRTINI
;
	MVI	A,3
	OUT	PIOAD		;SET PRINTER STROBE AND INPUT PRIME = 1(FALSE)
;
	RET
;
;
; CHECK TTYA INPUT STATUS.
;
TTYSTA:
	IN	CSTATA		;READ TTY CH 'A' STATUS
	JMP	TTYST1
;
; CHECK TTYB INPUT STATUS.
;
TTYSTB:
	IN	CSTATB		;READ CONSOLE STATUS.
TTYST1:
	ANI	CKBR		;LOOK AT KB READY BIT.
TTYST2:
	MVI	A,0		;SET A=0 FOR RETURN.
	RZ			;NOT READY WHEN ZERO.
	DCR	A		;IF READY A=FF.
	RET			;RETURN FROM CONST.

;
; READ A CHARACTER FROM TTYA RECIEVER REG.
;
TTYAIN:
	CALL	TTYSTA		;CHECK STATUS
	JZ	TTYAIN		;IF NOT THEN WAIT
	IN	CDATAA		;IF READY THEN READ A CHARACTER IN.
	ANI	7FH		;STRIP OFF BIT #7
	RET

	.Z80
TTYBIN:	PUSH	BC		;SAVE REGISTERS
	LD	BC,8000H	;TIME OUT COUNTER FOR 1/2 SECOND
TTYB20:	CALL	TTYSTB		;CHECK THE STATUS
	JR	NZ,TTYB10	;SKIP
	DEC	BC		;COUNT DOWN
	LD	A,B		;BC REACHED ZERO?
	OR	C
	JR	NZ,TTYB20	;NO, LOOP BACK
	LD	A,0		;MOTOR AND LIGHT OFF
	OUT	(DSELOP),A	;SEND OUT
	LD	(MOTFLG),A	;MOTOR ON/OFF FLAG
	JR	TTYB20		;LOOP UNTIL WE GET A CHARACTER
TTYB10:	IN	A,(CDATAB)	;FETCH THE CHARACTER
	AND	7FH		;STRIP OFF PARITY BIT
	POP	BC
	RET
	.8080

;
; WRITE A CHARACTER TO THE TTYA OUTPUT DEVICE.
;
TTYAOUT:
	CALL	TTYSOA		;CHECK CHANNEL 'A' TXMIT STATUS
	JZ	TTYAOUT		;IF NOT READY THEN WAIT
;
	MOV	A,C
	ANI	7FH		;STRIP OFF BIT #7 ****** FOR TEST ONLY ******
	OUT	CDATAA		;ELSE OUTPUT DATA TO TTY 'A' TXMIT REG.
	RET

;
; WRITE A CHARACTER TO THE TTYB OUTPUT DEVICE.
;
TTYBOUT:
	CALL	TTYSOB		;CHECK CHANNEL 'B' TXMIT STATUS
	JZ	TTYBOUT		;IF NOT READY THEN WAIT
;
	MOV	A,C
	OUT	CDATAB		;ELSE OUTPUT DATA TO TTY 'B' TXMIT REG.
	RET
;
TTYSOA:
	MVI	A,10H		; DO A EXTRN RESET COMMAND
	OUT	CSTATA
;
	IN	CSTATA		;READ CHANNEL 'A' STATUS
	ANI	CPTR+CTS	;CHECK READY
	CPI	CPTR+CTS
	JZ	TTYSO1		;IF YES, THEN SKIP
;				;SET NOT READY CONDITION AND RETURN
	XRA	A
	RET
;
TTYSOB:
	MVI	A,10H		;DO EXTRNAL RESET STATUS LATCH COMMAND
	OUT	CSTATB
;
	IN	CSTATB		;READ CHANNEL 'B' STATUS
	ANI	CPTR+CTS	;CHECK TXMIT READY AND CTS.
	CPI	CPTR+CTS	;ARE BOTH HIGHT
	JZ	TTYSO1		;IF READY RETURN WITH ZFLG=0 AND A=FF
;
	XRA	A		;IF NOT READY RETURN WITH ZFLG=1 AND A=0
	RET
;
TTYSO1:
	XRA	A
	DCR	A
	RET
;
;
; 	READ LINE PRINTER DEVICE STATUS
;	RETURNS: ZFLAG = 1; A = 0FFH IF PRINTER READY
;		 ZFLAG = 0; A = 0 IF PRINTER BUSY
;
LPSTAT:
	IN	PIOAD
	ANI	00100000B	;CHECK PRINTER BUSY
	MVI	A,0FFH
	RZ
	MVI	A,0
	RET
;
;
; WRITE A CHARACTER ON LINE PRNTER DEVICE.
;
LPOUT:
;	IN	PIOAD		;READ PRINTER STATUS
;	DB	0CBH		;Z80-INST. "BIT PRTPEM,A"
;	DB	47H+(PRTPEM*8)
;	CNZ	LPPAEM		;DISPLAY LINE PRINTER PAGE EMPTY
;	DB	0CBH		;Z80-INST. "BIT PRTSLC,A"
;	DB	47H+(PRTSLC*8)
;	CNZ	LPNSLC		;DISPLAY LINE PRINTER OFF LINE
LPOUT1:
	CALL	LPSTAT		;CHECK PRINTER READY
	JNZ	LPOUT1		;WAIT IF NOT READY
	MOV	A,C
	ANI	7FH		;STRIP OFF BIT #7
	OUT	PIOBD
	MVI	A,2		;SET DATA STROBE (BIT #1 = 1; BIT #0 = 0)
	OUT	PIOAD
	INR	A		;RESET DATA STROBE (BIT #1 = 1;BIT #0 = 1)
	OUT	PIOAD
	RET
;
;	DISPLAY PRINTER PAPER OUT ERROR MESSAGE
;
LPPAEM:
	PUSH	H
	LXI	H,MESSG1
	CALL	WERRL
	POP	H
	RET
;
;	DISPLAY PRINTER OFF LINE ERROR MESSAGE
;
LPNSLC:
	PUSH	H
	LXI	H,MESSG2
	CALL	WERRL
	POP	H
	RET
;
;	WRITE ERROR MESSAGE TO CONSOLE
;	ACCEPTS: HL = @ STRING POINTER (TERMINATE BY NULL CHAR.)
;
WERRL:
	PUSH	PSW		;SAVE CALLER REGS.
	PUSH	D
	PUSH	B
WERRL1:
	MOV	A,M		;CHECK END OF STRING ENCOUNTERED
	ORA	A
	JZ	WERRL2		;YES, THEN EXIT
	MOV	C,A		;ELSE WRITE IT TO CONSOLE
	PUSH	H
	CALL	CONOUT
	POP	H
	INX	H		;ADDRESS NEXT CHAR. IN STRING
	JMP	WERRL1		;THEN DO NEXT
;
WERRL2:
	POP	B		;RESTORE CALLER REGS.
	POP	D
	POP	PSW
	RET
;
;	CONSOLE INPUT STATUS ROUTINE
;	READ CONSOLE STATUS AND RETURN IT IN A-REG
;
CONST:	CALL	IODISP		;DIRECT I/O TO PROPER DEVICE
	DB	0		;CONSOLE POSITION IN I/O BYTE
	DW	TTYSTA
	DW	TTYSTB
	DW	READST
	DW	UCST1		;USER DEFINED CONSOLE STATUS UC#1
;
;	CONSOLE INPUT ROUTINE.
;	READ A CHARACTER FROM LOGICAL CONSOLE DEVICE
;
CONIN:
	CALL	IODISP		;DIRECT I/O TO PROPER DEVICE
	DB	0		;CONSOLE POSITION IN I/O BYTE
	DW	TTYAIN
	DW	TTYBIN
	DW	READER
	DW	UCIN1		;USER DEFINED CONSOLE INPUT UC#1
;
;	CONSOLE OUTPUT ROUTINE
;	SEND A CHARACTER TO LOGICAL CONSOLE DEVICE
;
CONOUT:
	CALL	IODISP		;DIRECT I/O TO PROPER DEVICE
	DB	0		;CONSOLE POSITION IN I/O BYTE
	DW	TTYAOUT
	DW	TTYBOUT
	DW	LIST
	DW	UCOUT1		;USER DEFINED CONSOLE OUTPUT UC#1
;
;	PAPER TAPE READER ROUTINE
;	READ A CHARACTER FROM LOGICAL READER DEVICE
;
READER:
	CALL	IODISP		;DIRECT I/O TO PROPER DEVICE
	DB	2		;READER POSITION IN I/O BYTE
	DW	TTYBIN
	DW	TTYAIN
	DW	UR1		;USER DEFINED READER #1
	DW	UR2		;USER DEFINED READER #2
;
READST:
	CALL	IODISP
	DB	2
	DW	TTYSTB
	DW	TTYSTA
	DW	UR1STA		;USER DEFINED READER STATUS #1
	DW	UR2STA		;USER DEFINED READER STATUS #2
;
;	PAPER TAPE PUNCH ROUTINE.
;	SEND A CHARACTER IN C-REG TO LOGICAL PUNCH DEVICE.
PUNCH:
	CALL	IODISP		;DIRECT I/O TO PROPER DEVICE
	DB	4		;PUNCH POSITION IN I/O BYTE
	DW	TTYBOUT
	DW	TTYAOUT
	DW	LPOUT
	DW	UP2PUN		;USER DEFINED PUNCH #2
;
;	LINE PRINTER ROUTINE.
;	SEND A CHARACTER IN C-REG TO LOGICAL LIST DEVICE.
;
LIST:
	CALL	IODISP		;DIRECT I/O TO PROPER DEVICE
	DB	6		;LINE PRINTER POSITION IN I/O BYTE
	DW	TTYAOUT
	DW	TTYBOUT
	DW	LPOUT
	DW	UL1		;USER DEFINED LIST #1
;
;	LINE PRINTER STATUS ROUTINE.
;	READ LINE PRINTER STATUS AND RETURN IN A-REG
;
LISTST:
	CALL	IODISP
	DB	6
	DW	TTYSOA
	DW	TTYSOB
	DW	LPSTAT
	DW	UL1STAT		;USER DEFINED LIST #1 STATUS
 
; HERE IS THE SERIAL PRINTER DRIVER, WHICH EXPECTS
; THE DEVICE ON THE OTHER END TO SUPPORT AN ETX/ACK
; PROTOCOL.  PORT USED IS SIO CHANNEL A.

	.Z80
UL1:
	LD	A,(UL1SIZ)	; SIZE OF PRINTER BUFFER.
	LD	B,A		; FOR LATER.
	OR	A		; CLEAR CARRY
	RRA			; DIVIDE BY 2
	LD	E,A		; E <- UL1SIZ/2
	LD	HL,UL1CNT	; CURRENT BUFFER COUNT
	INC	(HL)		; BUMP IT.
 
UL1L10:	IN	A,(CSTATA)	; READ STATUS 
	BIT	RCVRDY,A	; DO WE HAVE AN INPUT CHARACTER?
	JR	Z,UL1L20	; NO. SEND CHARACTER.
	IN	A,(CDATAA)	; GRAB THE CHARACTER.
	AND	7FH		; STIP PARITY.
	CP	ASCACK		; IS IT ACK?
	JR	Z,UL1L60	; YES, PROCESS IT.
UL1L20:	LD	A,E		; GET UL1SIZ/2
	CP	(HL)		; IS BUFFER HALF-FULL?
	JR	NZ,UL1L40	; NO, NO NEED FOR ETX.
 
UL1L30:	IN	A,(CSTATA)	; PREPARE FOR OUTPUT.
	BIT	TRXRDY,A	; CAN WE OUTPUT?
	JR	Z,UL1L30	; NOT YET.
	LD	A,ASCETX	; SEND OFF THE END-OF-
	OUT	(CDATAA),A	; BLOCK CHARACTER.
	JR	UL1L50		; NOW OUTPUT THE CHARACTER
 
UL1L40:	LD	A,B		; ORIGINAL BUFFER SIZE
	CP	(HL)		; CHECK FOR FULL AND OVERFLOW.
	JR	Z,UL1L30	; FULL, SO SEND ANOTHER ETX
	JR	C,UL1L10	; OVERFLOW, WAIT FOR ACK.
 
UL1L50:	IN	A,(CSTATA)	; THIS IS THE REAL OUTPUT
	BIT	TRXRDY,A	; ROUTINE AND EXIT
	JR	Z,UL1L50	; LOOP UNTIL TRANSMITTER READY.
	LD	A,C		; CHARACTER HAS BEEN IN REG. C
	AND	7FH		; ALL THIS TIME. STRIP PARITY.
	OUT	(CDATAA),A	; SHIP IT!
	RET			; ONLY EXIT POINT.

UL1L60:	LD	A,(HL)		; DID WE EVER SEND AN ETX?
	SUB	E		; I.E., IS BUFFER > = HALF FULL?
	JR	Z,UL1L70	; YES.
	JR	C,UL1L50	; NO, SPURIOUS ACK.
 
UL1L70:	LD	(HL),A		; ADJUST THE BUFFER COUNT
	JR	UL1L50		; AND SEND THE CHARACTER.

; CHECK THE STATUS OF SERIAL PRINTER,
; CP/M UL1 DEVICE.

UL1STAT:
	LD	HL,UL1CNT	; CURRENT BUFFER COUNT
	LD	A,(UL1SIZ)	; MAX COUNT.
	CP	(HL)		; ROOM FOR MORE CHARACTER?
	LD	A,0FFH		; ANTICIPATE AFFIRMATIVE.
	RET	NZ		; LISTER IS READY.
 
	IN	A,(CSTATA)	; OTHERWISE SEE IF WE HAVE
	BIT	RCVRDY,A	; AN INPUT CHARACTER READY.
	LD	A,0FFH		; ANTICIPATE AFFIRMATIVE AGAIN.
	RET	NZ		; WE ARE ASSUMING CHAR. IS AN ACK.
 
	XOR	A		; WE MUST NOT BE READY YET
	RET
	.8080
;
;	THIS ROUTINE TRANSFER CONTROL TO 
;	THE I/O DRIVER INDICATED BY THE 
;	APPROPRIATE BITS IN IOBYTE AT ADDRESS (0003H)
;	ENTRY (SP) -->  (DEVICE TYPE)
;			(DEVICE 1 ADDRESS)
;			(DEVICE 2 ADDRESS)
;			(DEVICE 3 ADDRESS)
;			(DEVICE 4 ADDRESS)
;
IODISP:
	POP	H
	PUSH	D
	MOV	A,M		;GET DEVICE TYPE
	INX	H		;ADDRESS DEVICE 1 ADDRESS
	MOV	D,A		;SAVE IT FOR LATER
	ORA	A
	LDA	IOBYTE		;GET CURRENT IOBYTE
	JZ	IODI20		;IF NO SHIFTING NEEDED
;
IODI10:
	RRC			;ROTATE BYTE UNTIL DEVICE BITS
	DCR	D		;ARE LINED UP WITH BIT #0
	JNZ	IODI10
;
IODI20:
	ANI	03H		;MASK OFF DON'T CARE BITS.
	RLC
	MOV	E,A
	DAD	D
	MOV	E,M		;GET DISPATCH ADDRESS INTO DE
	INX	H
	MOV	D,M
	XCHG			;PUT THIS ADDRESS INTO HL
	POP	D		;RESTORE DE
	PCHL			;AND GO TO I/O ROUTINE.
;
; INTERRUPT SERVICE ROUTINE FOR REAL TIME
;
	.Z80
INTRP:	DI
	LD	(TEMPSP),SP	;SAVE CURRENT STACK POINTER
	LD	SP,LOCSTK	;ASSIGN LOCAL STACK TO SP
	PUSH	AF		;SAVE REGISTERS
	PUSH	HL
	LD	HL,PULSE	;1/60 OF SECOND
	INC	(HL)		;INCREMENT
	LD	A,3DH		;REACHED A SECOND?
	CP	(HL)
	JR	NZ,INT10	;NO, RETURN FROM INTERRUPT
	LD	(HL),0		;YES, CLEAR PULSE
	INC	HL
	LD	A,(HL)		;GET SECOND
	INC	A		;INCREMENT
	DAA			;MAKE IT DECIMAL
	LD	(HL),A		;STORE IT BACK
	LD	A,60H		;IS IT A MINUTE?
	CP	(HL)
	JR	NZ,INT10	;NO, RETURN FROM INTERRUPT
	LD	(HL),0
	INC	HL
	LD	A,(HL)		;GET MINUTE
	INC	A		;INCREMENT
	DAA			;MAKE IT DECIMAL
	LD	(HL),A		;STORE IT BACK
	LD	A,60H
	CP	(HL)		;IS IT AN HOUR?
	JR	NZ,INT10	;NO, RETURN FROM INTERRUPT
	LD	(HL),0
	INC	HL
	LD	A,(HL)		;GET HOUR
	INC	A		;INCREMENT
	DAA			;MAKE IT DECIMAL
	LD	(HL),A		;STORE IT BACK
	LD	A,24H
	CP	(HL)		;IS IT A DAY?
	JR	NZ,INT10	;NO, RETURN FROM INTERRUPT
	LD	(HL),0
;
INT10:	POP	HL		;RESTORE REGISTERS
	POP	AF
	LD	SP,(TEMPSP)	;RESTORE STACK POINTER
	EI
	RETI
;
; DATA AREA FOR INTERRUPT
;
CTCTAB: DEFB	CTC2
	DEFB	2
	DEFB	10100111B	;TIMER, INTERRUPT ENABLE, PRESCALE 256
	DEFB	0		;TIME CONSTANT 256

MOTFLG:	DEFB	1		;MOTOR ON/OFF FLAG, SET TO 1 FOR ON

TEMPSP:	DEFS	2
	DEFS	20
LOCSTK:
	.8080
;
UL1SIZ:	DB	80H		;SIZE OF SERIAL PRINTER BUFFER
UL1CNT:	DS	1		;SERIAL PRINTER BUFFER COUNT	
;
MESSG1:
	DB	CR,LF,'**** PRINTER PAPER EMPTY ****',0
;
MESSG2:
	DB	CR,LF,'**** PRINTER IS OFF-LINE ****',0
;
SIOTAB:
	DB	CSTATA
	DB	10
	DB	11011000B	;RESET CHANNEL
	DB	11011000B	;ANOTHER FOR SAFETY
	DB	00010100B	;EXTERNAL STAT RESET, W
	DB	01001100B	;BAUD RATE MULT
	DB	5		;PT TO WR5
	DB	11101010B	;TX 8 BITS TX ENABLE
	DB	1		;PT TO WR1
	DB	00000000B	;DISABLE RCV INT.
	DB	3		;PT TO WR3
	DB	11000001B	;RX 8 BITS RX ENABLE
;	
	DB	CSTATB
	DB	10
	DB	11011000B	;RESET CHANNEL
	DB	11011000B	;ANOTHER FOR SAFETY
	DB	00010100B	;EXTERNAL STAT RESET, W
	DB	01001100B	;BAUD RATE MULT
	DB	5		;PT TO WR5
	DB	11101010B	;TX 8 BITS TX ENABLE
	DB	1		;PT TO WR1
	DB	00000000B	;DISABLE RCV INT.
	DB	3		;PT TO WR3
	DB	11000001B	;RX 8 BITS RX ENABLE
;
PIOTAB:	DB	PIOAC		;PIO PORT 'A'
	DB	PIOSZ1		;INITIALIZE TABLE LENGTH
PIOTA1:	DB	00000111B	;INTERRUPT CONTROL WORD
	DB	11001111B	;MODE SELECTION WORD
	DB	01111100B	;MODE CONTROL WORD BIT #2 TO #6 = INPUT
				;BIT #0,1,7 = OUTPUT
PIOSZ1	EQU	$-PIOTA1
PIOND1:	DB	PIOBC
	DB	PIOSZ2
PION1:	DB	00000111B	;INTERRPUT CONTROL WORD
	DB	00001111B	;SELECT CHANNEL 'B' = OUTPUT ONLY

PIOSZ2	EQU	$-PION1
;
;	DUMMY I/O ROUTINES THAT NOT YET IMPLEMENT IN BIOS.
;
UCST1:
UR1STA:
UR2STA:
	MVI	A,0FFH		;RETURN WITH NOT BUSY CONDITION.
	ORA	A
	RET
;
UCIN1:
UR1:
UR2:
	MVI	A,1AH		;RETURN WITH EOF CODE.
;
UCOUT1:
UP2PUN:
	RET			;DO NOTHING.
;
;
;	END
